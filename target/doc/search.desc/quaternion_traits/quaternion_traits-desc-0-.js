searchState.loadedDescShard("quaternion_traits", 0, "This library provides traits and many function for dealing …\nA representation of the real number line.\nThe general representation for any complex number type.\nA constructor for complex numbers.\nAdds constants associated with any complex number.\nUsed as the aporximative precision error for flaoting …\nThe positive real unit quaternion. (Multiplicative …\nThe positive real unit complex number. (Multiplicative …\nA quaternion with all <code>Num::NAN</code>s.\nThe scalar representation of <code>Num::NAN</code>.\nA complex number with all <code>Num::NAN</code>s.\nA vector with all <code>Num::NAN</code>s.\nThe representation of a <code>Not a Number</code> value.\nThe positive real unit scalar value. (Multiplicative …\nThe multiplicative identity.\nThe origin quaternion. (Aditive identity)\nThe origin complex number. (Aditive identity)\nThe origin vector. (Aditive identity)\nThe struct representation of the <code>Quaternion</code> trait.\nThe general representation of any quaternion type.\nA constructor for quaternions.\nAdds constants associated with any quaternion.\nAdds most functions in this crate as methods that take <code>self</code>…\nThe general representation of any rotation baised on euler …\nA constructor for scalar values.\nThe general representation for any scalar type.\nA constructor for scalar values.\nAdds constants associated with any scalar value.\nWrapper that changes the <code>Axis</code> methods from the libm ones …\nAn aproximation to the circumfrince of a circle divided by …\nThe unit quaternion on the first imaginary axis.\nThe unit  complex number on the imaginary axis.\nThe unit quaternion on the second imaginary axis.\nThe unit quaternion on the third imaginary axis.\nThe unit quaternion on the real axis.\nThe unit quaternion on the real axis.\nThe unit complex number on the real axis.\nThe unit complex number on the real axis.\nThe unit vector on the x axis.\nThe unit vector on the y axis.\nThe unit vector on the z axis.\nThe general representation for any vector type.\nA constructor for vectors.\nAdds constants associated with any vectors.\nThe origin scalar value. (Aditive identity)\nThe additive identity.\nGets the absolute value of a quaternion. (Also knows as it…\nGets the absolute value of a quaternion. (Also knows as it…\nGets the absolute value of a quaternion. (Also knows as it…\nCalculates the absolute value of <code>self</code>.\nCalculates the absolute value of <code>self</code>.\nGets the squared absolute value of a quaternion. (Also …\nGets the squared absolute value of a quaternion. (Also …\nGets the squared absolute value of a quaternion. (Also …\nCalculates the arccosine of <code>self</code>.\nAdds two quaternions.\nAdds two quaternions togheder.\nAdds two quaternions togheder.\nCalculates the arcsine of <code>self</code>.\nCalculates the arctangent of <code>self / bottom</code>.\nConstructs a quaternion from a given axis unit vector and …\nConstructs a quaternion from a given axis unit vector and …\nGets the complex part of a quaternion.\nGets the complex part of a quaternion.\nGets the complex part of a quaternion.\nGets the conjugate of this quaternion.\nGets the conjugate of a quaternion.\nGets the conjugate of a quaternion.\nCalculates the  cosinus of a quaternion.\nGets the cosinus of a quaternion.\nGets the cosinus of a quaternion.\nCalculates the cosine of <code>self</code>.\nCalculates the cosine of <code>self</code>.\nCalculates the hyperbolic cosinus of a quaternion.\nGets the hyperbolic cosinus of a quaternion.\nGets the hyperbolic cosinus of a quaternion.\nCalculates the arccosine of <code>self</code>.\nCalculates the arccosine of <code>self</code>.\nCalculates the cotangent of a quaternion\nCalculates the sinus of a quaternion.\nCalculates the cosecant of a quaternion.\nGets the cosecant of a quaternion.\nGets the cosecant of a quaternion.\nWrites a quaternion representation to a formatter/string.\nGets the distance inbetween the coordenates of two …\nGets the distance inbetween the coordonates of two …\nGets the distance inbetween the coordonates of two …\nDivides a quaternion by another one.\nDivides a quaternion from another one.\nDivides a quaternion from another one.\nDivides a quaternion by another one in reversed order.\nDivides a quaternion from another one.\nDivides a quaternion from another one.\nGets the dot product of two quaternions.\nGets the dot product of two quaternions.\nGets the dot product of two quaternions.\nChecks if two types represent the same quaternion.\nChecks if two quaternion represent the same value.\nChecks if two quaternion represent the same value.\nRaises the number e to a quaternion power.\nCalculates <code>e</code> raised to the power of <code>self</code>.\nRaises the number e to a quaternion power.\nRaises the number e to a quaternion power.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a quaternion from a complex number …\nConstructs a new complex number from another one. Will …\nConstructs a new complex number from another one. Will …\nConstructs a quaternion representation from a complex …\nConstructs a quaternion representation from a complex …\nConstructs a new quaternion from another one. Will have …\nConstructs a new quaternion from another one. Will have …\nConstructs a quaternion from a rotation.\nConstructs a new rotation from another one. Will have same …\nConstructs a new rotation from another one. Will have same …\nConstructs a unit quaternion representation from a …\nConstructs a unit quaternion representation from a …\nConstructs a quaternion from a scalar value.\nConstructs a new scalar value from another one. Will have …\nConstructs a new scalar value from another one. Will have …\nConstructs a quaternion representation from a scalar value.\nConstructs a quaternion representation from a scalar value.\nConstructs a quaternion from a vector representation.\nConstructs a new vector from another one. Will have same …\nConstructs a new vector from another one. Will have same …\nConstructs a quaternion representation from a vector.\nConstructs a quaternion representation from a vector.\nGets the wrapped value.\nGets the nubmer value.\nGets a cloned version of the wrapped value.\nThe first imaginary part of this quaternion.\nConstructs the positive real unit quaternion. …\nConstructs the multiplicative identity for quaternions.\nConstructs the multiplicative identity for quaternions.\nConstructs the positive real unit quaternion. …\nConstructs the positive real unit quaternion. …\nThe imaginary part of this complex number.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the inverse quaternion of a quaternion.\nGets the inverse of a quaternion.\nGets the inverse of a quaternion.\nChecks to see if this quaternion is a complex value.\nChecks if a quaternion is a complex value.\nChecks if a quaternion is a complex value.\nChecks to see if <code>self</code> is NAN. (<code>x == Self::NAN</code> is not …\nChecks if the distance between two quaternions is less …\nChecks if the distance inbetween two quaternions is less …\nChecks if the distance inbetween two quaternions is less …\nChecks to see if this quaternion is on a axis plane.\nChecks if a quaternion is on an axis plane.\nChecks if a quaternion is on an axis plane.\nChecks to see if this quaternion is only a scalar value.\nChecks if a quaternion is a scalar value.\nChecks if a quaternion is a scalar value.\nChecks to see if this quaternion is a vector value. (or …\nChecks if a quaternion is a vector value.\nChecks if a quaternion is a vector value.\nThe second imaginary part of this quaternion.\nThe third imaginary part of this quaternion.\nGets the natural logarithm of a quaternion.\nCalculates natural logarithm <code>self</code>.\nGets the natural logarithm of a quaternion.\nGets the natural logarithm of a quaternion.\nGets the logarithm of a quaternion with a quaternion base.\nGets the logarithm of a quaternion.\nGets the logarithm of a quaternion.\nMaps the number value of self into another one.\nMultiplies a quaternion to another one.\nMuliplies a quaternion to another one.\nMuliplies a quaternion to another one.\nMultiplies two quaternions in reversed order.\nMuliplies a quaternion to another one in a reversed order.\nMuliplies a quaternion to another one in a reversed order.\nConstructs a quaternion that has all axies set to <code>Num::NAN</code>s…\nConstructs a quaternion with all <code>Num::NAN</code>s.\nConstructs a quaternion with all <code>Num::NAN</code>s.\nConstructs a quaternion that has all axies set to <code>Num::NAN</code>s…\nConstructs a quaternion that has all axies set to <code>Num::NAN</code>s…\nGets the negative of this quaternion.\nGets the negative of a quaternion.\nGets the negative of a quaternion.\nCreates a new instince of this struct.\nCreates a new <code>Std&lt;Num&gt;</code>\nConstructs a new complex number.\nConstructs a new quaternion\nConstructs a new scalar value.\nConstructs a new scalar value.\nConstructs a new vector.\nGets the normal of a quaternion.\nGets the normal of a quaternion.\nGets the normal of a quaternion.\nConstructs the origin quaternion. (Aditive identity)\nConstructs the origin quaternion. (additive identity)\nConstructs the origin quaternion. (additive identity)\nConstructs the origin quaternion. (Additive identity)\nConstructs the origin quaternion. (Additive identity)\nThe pitch of this rotation. (angle on the y axis)\nCalculates the <code>self</code> raised to the <code>exp</code> power.\nRaises a quaternion to a scalar power.\nRaises a quaternion to a scalar power.\nRaises a quaternion to a scalar power.\nRaises a quaternion to an integer power.\nRaises a quaternion to an integer power.\nRaises a quaternion to an integer power.\nRaises a quaternion to a quaternion power.\nRaises a quaternion to a quaternion power.\nRaises a quaternion to a quaternion power.\nRaises a quaternion to a positive integer power.\nRaises a quaternion to a positive integer power.\nRaises a quaternion to a positive integer power.\nMultiplies all the quaternions in an iterator.\nThe quaternion held by this struct.\nThe real part of this quaternion.\nThe real part of this complex number.\nThe roll of this rotation. (angle on the z axis)\nGives the vector rotated by the given quaternion\nConstructs a quaternion representing the rotation …\nThe <code>Axis</code> representation of this scalar value.\nGets the scalar part of a quaternion.\nGets the scalar part of a quaternion.\nGets the scalar part of a quaternion.\nScales a quaternion.\nScales a quaternion.\nScales a quaternion.\nCalculates the secant of a quaternion.\nGets the secant of a quaternion.\nGets the secant of a quaternion.\nCalculates the sinus of a quaternion.\nGets the sinus of a quaternion.\nGets the sinus of a quaternion.\nCalculates the sine of <code>self</code>.\nCalculates the sine of <code>self</code>.\nCalculates the sinus and cosinus of a quaternion at once.\nCalculates the sine and cosine of <code>self</code> at once.\nCalculates the hyperbolic sinus of a quaternion.\nGets the hyperbolic sinus of a quaternion.\nGets the hyperbolic sinus of a quaternion.\nCalculates the arcsine of <code>self</code>.\nCalculates the arcsine of <code>self</code>.\nGets the absolute value of a quaternion close to the …\nCalculates the sqaure root of a quaternion.\nCalculates the square root of <code>self</code>.\nGets the square root of a quaternion.\nGets the square root of a quaternion.\nSubtracts a quaternion from another one.\nSubtracts a quaternion from another one.\nSubtracts a quaternion from another one.\nAdds all the quaternions in an iterator.\nCalculates the tangent of a quaternion\nGets the tangent of a quaternion.\nGets the tangent of a quaternion.\nCalculates the sinus of a quaternion.\nGets the hyperbolic tangent of a quaternion.\nGets the hyperbolic tangent of a quaternion.\nConstructs a complex number representation from a …\nTurns a quaternion representation into a complex number …\nTurns a quaternion representation into a complex number …\nConstructs a rotation representation from a quaternion.\nTurns a quaternion representation into a rotation.\nTurns a quaternion representation into a rotation.\nConstructs a scalar value from a quaternion.\nTurns a quaternion representation into a scalar …\nTurns a quaternion representation into a scalar …\nTurns a quaternion representation into a String.\nConstructs a complex number representation from a …\nTurns a quaternion representation into a vector value …\nTurns a quaternion representation into a vector value …\nScales a quaternion by the inverse of the scalar.\nScales a quaternion by the inverse of the scalar.\nScales a quaternion by the inverse of the scalar.\nGets the vector part of a quaternion.\nGets the vector part of a quaternion.\nGets the vector part of a quaternion.\nThe first part of this vector.\nThe second part of this vector.\nThe yaw of this rotation. (angle on the x axis)\nThe third part of this vector.")